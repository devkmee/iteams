<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.iteams.outs.message.dao.MessageDAO">

<select id="selectSendTotalRecord" resultType="int" parameterType="kr.or.ddit.iteams.common.vo.MasterVO">
SELECT
	 COUNT(*) 
FROM 
	MESSAGE A, MSG_DET B
WHERE 
	A.MSG_NUM = B.MSG_NUM(+)
	AND A.MEM_ID = #{memId}
	AND (B.DELETE_MEM NOT IN #{memId} OR B.DELETE_MEM IS NULL)
</select>

<select id="selectSendList" resultType="kr.or.ddit.iteams.common.vo.MasterVO">
SELECT B.*
FROM (
	SELECT A.*, ROWNUM RNUM
	FROM (
		SELECT
		AA.MSG_NUM 
		, AA.MSG_TITLE 
		, AA.MSG_CONTENT 
		, TO_CHAR(AA.SEND_DATE, 'YYYY.MM.DD') AS SEND_DATE
		, BB.MSG_RECEIVE
		FROM
			MESSAGE AA LEFT OUTER JOIN MSG_DET BB ON(AA.MSG_NUM = BB.MSG_NUM)
		WHERE AA.MEM_ID = #{memId}
		AND (BB.DELETE_MEM NOT IN #{memId} OR BB.DELETE_MEM IS NULL)
		ORDER BY AA.SEND_DATE DESC
		) A  
	) B
WHERE RNUM BETWEEN #{startRow} AND #{endRow}
</select>

<select id="selectReceiveTotalRecord" resultType="int" parameterType="kr.or.ddit.iteams.common.vo.MasterVO">
SELECT
	COUNT(*)
FROM 
	MESSAGE A, MSG_DET B
WHERE 
	A.MSG_NUM = B.MSG_NUM(+)
AND B.MSG_RECEIVE = #{memId}
AND (B.DELETE_MEM NOT IN #{memId} OR B.DELETE_MEM IS NULL)
</select>

<select id="selectReceiveList" resultType="kr.or.ddit.iteams.common.vo.MasterVO">
SELECT B.*
FROM (
	SELECT A.*, ROWNUM RNUM
	FROM (
		SELECT
		AA.MSG_NUM 
		, AA.MSG_TITLE 
		, AA.MSG_CONTENT 
		, TO_CHAR(BB.RECEIVE_DATE, 'YYYY.MM.DD') AS RECEIVE_DATE 
		, AA.MEM_ID
		, BB.RECEIVE_NY
		FROM
			MESSAGE AA LEFT OUTER JOIN MSG_DET BB ON(AA.MSG_NUM = BB.MSG_NUM)
		WHERE BB.MSG_RECEIVE = #{memId}
		AND (BB.DELETE_MEM NOT IN #{memId} OR BB.DELETE_MEM IS NULL)
		ORDER BY AA.SEND_DATE DESC
		) A  
	) B
WHERE RNUM BETWEEN #{startRow} AND #{endRow}
</select>


<select id="selectSendDetail" resultType="kr.or.ddit.iteams.common.vo.MasterVO">
SELECT A.MSG_TITLE, TO_CHAR(A.SEND_DATE, 'YYYY.MM.DD') AS SEND_DATE, A.MEM_ID, B.MSG_RECEIVE, A.MSG_CONTENT, A.MSG_NUM
  FROM MESSAGE A, MSG_DET B
 WHERE A.MSG_NUM = B.MSG_NUM
   AND A.MSG_NUM = #{msgNum}
   AND MEM_ID = #{memId}
</select>

<select id="selectReceiveDetail" resultType="kr.or.ddit.iteams.common.vo.MasterVO">
SELECT A.MSG_TITLE, TO_CHAR(A.SEND_DATE, 'YYYY.MM.DD') AS SEND_DATE, A.MEM_ID, TO_CHAR(B.RECEIVE_DATE, 'YYYY.MM.DD') AS RECEIVE_DATE, A.MSG_CONTENT, A.MSG_NUM
  FROM MESSAGE A, MSG_DET B
 WHERE A.MSG_NUM = B.MSG_NUM 
   AND B.MSG_RECEIVE = #{memId} 
   AND A.MSG_NUM = #{msgNum} 
</select>


<insert id="sendMessage" parameterType="kr.or.ddit.iteams.common.vo.MasterVO">
		INSERT ALL
		INTO MESSAGE (
			MSG_NUM 
			, MEM_ID 
			, MSG_TITLE 
			, MSG_CONTENT 
			, SEND_DATE 
		)
		VALUES (
			MSG_SEQ.NEXTVAL
			, #{memId,jdbcType=VARCHAR}
			, #{msgTitle,jdbcType=VARCHAR}
			, #{msgContent,jdbcType=VARCHAR}
			, SYSDATE
		)
		INTO MSG_DET (
			DET_NO 
			, MSG_NUM 
			, MSG_RECEIVE 
			, RECEIVE_NY 
			, RECEIVE_DATE 
			, DELETED_NY 
		)
		VALUES (
			MSGDETAIL_SEQ.NEXTVAL
			, MSG_SEQ.CURRVAL
			, #{msgReceive,jdbcType=VARCHAR}
			, 'N'
			, SYSDATE
			, 'N'
		)
		SELECT * FROM DUAL
</insert>

<update id="deleteMessage">
	UPDATE MSG_DET
	   SET DELETED_NY = 'Y'
	       , DELETE_DATE = SYSDATE
	       , DELETE_MEM = #{memId}
	 WHERE MSG_NUM = #{msgNum}
</update>

<update id="updateRead">
	UPDATE MSG_DET 
	   SET RECEIVE_NY = 'Y'
	 WHERE MSG_RECEIVE = #{memId}
	   AND MSG_NUM = #{msgNum}
</update>

<select id="selectMemIdList" parameterType="kr.or.ddit.iteams.common.vo.MasterVO" resultType="string">
	SELECT MEM_ID
	FROM MEMBER
	WHERE QUIT_NY IS NULL
	AND INSTR(MEM_ID, #{msgReceive}) > 0
	AND MEM_ID NOT IN #{memId}
</select>

<select id="selectNotReadMessageCount" parameterType="kr.or.ddit.iteams.common.vo.MasterVO" resultType="int">
SELECT COUNT(*)
FROM MSG_DET
WHERE RECEIVE_NY = 'N'
AND MSG_RECEIVE = #{memId}
</select>

</mapper>